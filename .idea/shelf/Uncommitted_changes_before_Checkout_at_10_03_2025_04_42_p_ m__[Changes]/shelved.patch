Index: app/src/main/res/navigation/nav_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    app:startDestination=\"@id/loginFragment\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/loginFragment\"\r\n        android:name=\"com.maverick.adminapp.ui.auth.LoginFragment\"\r\n        android:label=\"Login\"\r\n        tools:layout=\"@layout/fragment_login\">\r\n        <action\r\n            android:id=\"@+id/action_loginFragment_to_homeFragment\"\r\n            app:destination=\"@id/homeFragment\" />\r\n    </fragment>\r\n\r\n    <fragment\r\n        android:id=\"@+id/registerFragment\"\r\n        android:name=\"com.maverick.adminapp.ui.auth.RegisterFragment\"\r\n        android:label=\"Register\"\r\n        tools:layout=\"@layout/fragment_register\">\r\n        <action\r\n            android:id=\"@+id/action_registerFragment_to_homeFragment\"\r\n            app:destination=\"@id/homeFragment\" />\r\n    </fragment>\r\n\r\n    <fragment\r\n        android:id=\"@+id/homeFragment\"\r\n        android:name=\"com.maverick.adminapp.ui.home.HomeFragment\"\r\n        android:label=\"Home\"\r\n        tools:layout=\"@layout/fragment_home\">\r\n\r\n        <action\r\n            android:id=\"@+id/action_homeFragment_to_addDeviceFragment\"\r\n            app:destination=\"@id/addDeviceFragment\"/>\r\n        <action\r\n            android:id=\"@+id/action_homeFragment_to_viewDeviceFragment\"\r\n            app:destination=\"@id/viewDeviceFragment\"/>\r\n    </fragment>\r\n\r\n    <fragment\r\n        android:id=\"@+id/addDeviceFragment\"\r\n        android:name=\"com.maverick.adminapp.ui.home.AddDeviceFragment\"\r\n        android:label=\"Add Device\"\r\n        tools:layout=\"@layout/fragment_add_device\">\r\n        <action\r\n            android:id=\"@+id/action_addDeviceFragment_to_homeFragment\"\r\n            app:destination=\"@id/homeFragment\" />\r\n    </fragment>\r\n\r\n    <fragment\r\n        android:id=\"@+id/viewDeviceFragment\"\r\n        android:name=\"com.maverick.adminapp.ui.device.ViewDeviceFragment\"\r\n        android:label=\"Ver Dispositivo\"\r\n        tools:layout=\"@layout/fragment_view_device\">\r\n    </fragment>\r\n\r\n</navigation>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/nav_graph.xml b/app/src/main/res/navigation/nav_graph.xml
--- a/app/src/main/res/navigation/nav_graph.xml	(revision 560956e81e865cb129d62555fcdb9bd8f556e001)
+++ b/app/src/main/res/navigation/nav_graph.xml	(date 1741639689474)
@@ -53,6 +53,10 @@
         android:name="com.maverick.adminapp.ui.device.ViewDeviceFragment"
         android:label="Ver Dispositivo"
         tools:layout="@layout/fragment_view_device">
+
+            <argument
+                android:name="deviceId"
+                app:argType="com.maverick.adminapp.model.Device" />
     </fragment>
 
 </navigation>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config />\r\n    </shared>\r\n    <layouts>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml\">\r\n        <config>\r\n          <theme>@style/Theme.AppTheme</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_add_device.xml\">\r\n        <config>\r\n          <night>night</night>\r\n          <theme>@style/Theme.AppTheme</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml\">\r\n        <config>\r\n          <theme>@style/Theme.AppTheme</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_login.xml\">\r\n        <config>\r\n          <theme>@style/Theme.AppTheme</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_register.xml\">\r\n        <config>\r\n          <theme>@style/Theme.AppTheme</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_view_device.xml\">\r\n        <config>\r\n          <theme>@style/Theme.AppTheme</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_device.xml\">\r\n        <config>\r\n          <theme>@style/Theme.AppTheme</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/navigation/nav_graph.xml\">\r\n        <config>\r\n          <theme>@style/Theme.AppTheme</theme>\r\n        </config>\r\n      </layout>\r\n    </layouts>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e6319c68-cfcb-4478-a37c-babc9b7426b5\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.10.2/checksums/checksums.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.10.2/checksums/checksums.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.10.2/checksums/md5-checksums.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.10.2/checksums/md5-checksums.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.10.2/checksums/sha1-checksums.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.10.2/checksums/sha1-checksums.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.10.2/executionHistory/executionHistory.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.10.2/executionHistory/executionHistory.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.10.2/executionHistory/executionHistory.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.10.2/executionHistory/executionHistory.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.10.2/fileHashes/fileHashes.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.10.2/fileHashes/fileHashes.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.10.2/fileHashes/fileHashes.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.10.2/fileHashes/fileHashes.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.10.2/fileHashes/resourceHashesCache.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.10.2/fileHashes/resourceHashesCache.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/cache.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/cache.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/file-system.probe\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/file-system.probe\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/caches/deviceStreaming.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/caches/deviceStreaming.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/navEditor.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/navEditor.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/build.gradle.kts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/build.gradle.kts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/AndroidManifest.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/AndroidManifest.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/maverick/adminapp/ui/home/AddDeviceFragment.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/maverick/adminapp/ui/home/AddDeviceFragment.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/maverick/adminapp/ui/home/HomeFragment.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/maverick/adminapp/ui/home/HomeFragment.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/maverick/adminapp/utils/DeviceFormHelper.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/maverick/adminapp/utils/DeviceFormHelper.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/navigation/nav_graph.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/navigation/nav_graph.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build.gradle.kts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build.gradle.kts\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[DeviceId(pluginId=PhysicalDevice, isTemplate=false, identifier=serial=320344378426)]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$/app\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"AdminApp\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"AdminApp\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"AdminApp\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"AdminApp\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n                <item name=\"other\" type=\"c8890929:TasksNode$1\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"navigationResourceFile\" />\r\n        <option value=\"valueResourceFile\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"Kotlin Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"feature/ui-improvements\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"KotlinScriptingSettings\">\r\n    <scriptDefinition className=\"org.jetbrains.kotlin.scripting.resolve.KotlinScriptDefinitionFromAnnotatedTemplate\" definitionName=\"KotlinBuildScript\">\r\n      <order>2147483647</order>\r\n    </scriptDefinition>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2tdLyMrO3i5ZotLH5UgfDXYY4ic\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Android App.MainActivity.executor\": \"Run\",\r\n    \"Android App.app.executor\": \"Run\",\r\n    \"ResourceManagerPrefKey.ResourceType\": \"DRAWABLE\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.cidr.known.project.marker\": \"true\",\r\n    \"RunOnceActivity.readMode.enableVisualFormatting\": \"true\",\r\n    \"cf.first.check.clang-format\": \"false\",\r\n    \"cidr.known.project.marker\": \"true\",\r\n    \"com.google.services.firebase.aqiPopupShown\": \"true\",\r\n    \"git-widget-placeholder\": \"develop\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/kosmo/AndroidStudioProjects/MaterialDesign/material-components-android\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.17\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"settings.editor.selected.configurable\": \"preferences.lookFeel\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File\": [\r\n      \"TEXT\"\r\n    ]\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\kosmo\\AndroidStudioProjects\\AdminApp\\app\\src\\main\\res\\drawable\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Android App.app\">\r\n    <configuration name=\"MainActivity\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\" activateToolWindowBeforeRun=\"false\" temporary=\"true\">\r\n      <module name=\"AdminApp.app\" />\r\n      <option name=\"ANDROID_RUN_CONFIGURATION_SCHEMA_VERSION\" value=\"1\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"ALLOW_ASSUME_VERIFIED\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"specific_activity\" />\r\n      <option name=\"RESTORE_ENABLED\" value=\"false\" />\r\n      <option name=\"RESTORE_FILE\" value=\"\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"com.maverick.adminapp.MainActivity\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\" activateToolWindowBeforeRun=\"false\">\r\n      <module name=\"AdminApp.app\" />\r\n      <option name=\"ANDROID_RUN_CONFIGURATION_SCHEMA_VERSION\" value=\"1\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"ALLOW_ASSUME_VERIFIED\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"RESTORE_ENABLED\" value=\"false\" />\r\n      <option name=\"RESTORE_FILE\" value=\"\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Android App.MainActivity\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"StandaloneScriptsStorage\">\r\n    <option name=\"files\">\r\n      <set>\r\n        <option value=\"$PROJECT_DIR$/app/build.gradle.kts\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e6319c68-cfcb-4478-a37c-babc9b7426b5\" name=\"Changes\" comment=\"\" />\r\n      <created>1740677258277</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1740677258277</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"play_dynamic_filters_status\">\r\n    <option name=\"appIdToCheckInfo\">\r\n      <map>\r\n        <entry key=\"com.maverick.adminapp\">\r\n          <value>\r\n            <CheckInfo lastCheckTimestamp=\"1741623945672\" />\r\n          </value>\r\n        </entry>\r\n        <entry key=\"com.maverick.adminapp.test\">\r\n          <value>\r\n            <CheckInfo lastCheckTimestamp=\"1741623945672\" />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 560956e81e865cb129d62555fcdb9bd8f556e001)
+++ b/.idea/workspace.xml	(date 1741645399663)
@@ -54,28 +54,72 @@
   <component name="ChangeListManager">
     <list default="true" id="e6319c68-cfcb-4478-a37c-babc9b7426b5" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.gradle/8.10.2/checksums/checksums.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.10.2/checksums/checksums.lock" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/8.10.2/checksums/md5-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.10.2/checksums/md5-checksums.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/8.10.2/checksums/sha1-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.10.2/checksums/sha1-checksums.bin" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.10.2/checksums/md5-checksums.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.10.2/checksums/sha1-checksums.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/metadata.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/metadata.bin" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibs.java" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibs.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/8.10.2/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.10.2/executionHistory/executionHistory.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/8.10.2/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.10.2/executionHistory/executionHistory.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/8.10.2/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.10.2/fileHashes/fileHashes.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/8.10.2/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.10.2/fileHashes/fileHashes.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/8.10.2/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.10.2/fileHashes/resourceHashesCache.bin" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/checksums/checksums.lock" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/checksums/md5-checksums.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/checksums/sha1-checksums.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$AndroidPluginAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$AndroidxActivityLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$AndroidxComposeLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$AndroidxCoreLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$AndroidxEspressoLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$AndroidxLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$AndroidxLifecycleLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$AndroidxLifecycleRuntimeLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$AndroidxUiLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$AndroidxUiTestLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$AndroidxUiToolingLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$BundleAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$KotlinPluginAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$PluginAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs$VersionAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibs.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$AndroidPluginAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$AndroidxActivityLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$AndroidxComposeLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$AndroidxCoreLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$AndroidxEspressoLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$AndroidxLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$AndroidxLifecycleLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$AndroidxLifecycleRuntimeLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$AndroidxUiLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$AndroidxUiTestLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$AndroidxUiToolingLibraryAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$BundleAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$KotlinPluginAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$PluginAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock$VersionAccessors.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/classes/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibs.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/dependencies-accessors.lock" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/executionHistory.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/dependencies-accessors/gc.properties" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/fileChanges/last-build.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/fileHashes/fileHashes.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/fileHashes/fileHashes.lock" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/fileHashes/resourceHashesCache.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.2/gc.properties" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/cache.properties" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/cache.properties" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/config.properties" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/caches/deviceStreaming.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/caches/deviceStreaming.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/navEditor.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/navEditor.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/app/build.gradle.kts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/maverick/adminapp/ui/home/AddDeviceFragment.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/maverick/adminapp/ui/home/AddDeviceFragment.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/maverick/adminapp/ui/home/HomeFragment.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/maverick/adminapp/ui/home/HomeFragment.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/maverick/adminapp/utils/DeviceFormHelper.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/maverick/adminapp/utils/DeviceFormHelper.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/res/navigation/nav_graph.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/navigation/nav_graph.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/res/values/styles.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/build.gradle.kts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/gradle.properties" beforeDir="false" afterPath="$PROJECT_DIR$/gradle.properties" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -142,7 +186,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="feature/ui-improvements" />
+        <entry key="$PROJECT_DIR$" value="feature/update_device_info" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -179,7 +223,7 @@
     "com.google.services.firebase.aqiPopupShown": "true",
     "git-widget-placeholder": "develop",
     "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "C:/Users/kosmo/AndroidStudioProjects/MaterialDesign/material-components-android",
+    "last_opened_file_path": "C:/Users/kosmo/AndroidStudioProjects/device",
     "project.structure.last.edited": "Modules",
     "project.structure.proportion": "0.17",
     "project.structure.side.proportion": "0.2",
@@ -342,6 +386,8 @@
     <recent_temporary>
       <list>
         <item itemvalue="Android App.MainActivity" />
+        <item itemvalue="Android App.MainActivity" />
+        <item itemvalue="Android App.MainActivity" />
       </list>
     </recent_temporary>
   </component>
@@ -362,6 +408,17 @@
       <updated>1740677258277</updated>
     </task>
     <servers />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
   </component>
   <component name="play_dynamic_filters_status">
     <option name="appIdToCheckInfo">
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Project-wide Gradle settings.\r\n# IDE (e.g. Android Studio) users:\r\n# Gradle settings configured through the IDE *will override*\r\n# any settings specified in this file.\r\n# For more details on how to configure your build environment visit\r\n# http://www.gradle.org/docs/current/userguide/build_environment.html\r\n# Specifies the JVM arguments used for the daemon process.\r\n# The setting is particularly useful for tweaking memory settings.\r\norg.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8\r\n# When configured, Gradle will run in incubating parallel mode.\r\n# This option should only be used with decoupled projects. For more details, visit\r\n# https://developer.android.com/r/tools/gradle-multi-project-decoupled-projects\r\n# org.gradle.parallel=true\r\n# AndroidX package structure to make it clearer which packages are bundled with the\r\n# Android operating system, and which are packaged with your app's APK\r\n# https://developer.android.com/topic/libraries/support-library/androidx-rn\r\nandroid.useAndroidX=true\r\n# Kotlin code style for this project: \"official\" or \"obsolete\":\r\nkotlin.code.style=official\r\n# Enables namespacing of each library's R class so that its R class includes only the\r\n# resources declared in the library itself and none from the library's dependencies,\r\n# thereby reducing the size of the R class for that library\r\nandroid.nonTransitiveRClass=true\r\norg.gradle.java.home=C\\:\\\\Program Files\\\\Java\\\\jdk-17\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle.properties b/gradle.properties
--- a/gradle.properties	(revision 560956e81e865cb129d62555fcdb9bd8f556e001)
+++ b/gradle.properties	(date 1741640779057)
@@ -6,7 +6,7 @@
 # http://www.gradle.org/docs/current/userguide/build_environment.html
 # Specifies the JVM arguments used for the daemon process.
 # The setting is particularly useful for tweaking memory settings.
-org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
+org.gradle.jvmargs=-Xmx4608m -Dfile.encoding=UTF-8
 # When configured, Gradle will run in incubating parallel mode.
 # This option should only be used with decoupled projects. For more details, visit
 # https://developer.android.com/r/tools/gradle-multi-project-decoupled-projects
Index: .gradle/buildOutputCleanup/cache.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Fri Mar 07 23:05:12 CST 2025\r\ngradle.version=8.10.2\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/.gradle/buildOutputCleanup/cache.properties b/.gradle/buildOutputCleanup/cache.properties
--- a/.gradle/buildOutputCleanup/cache.properties	(revision 560956e81e865cb129d62555fcdb9bd8f556e001)
+++ b/.gradle/buildOutputCleanup/cache.properties	(date 1741644460552)
@@ -1,2 +1,2 @@
-#Fri Mar 07 23:05:12 CST 2025
+#Mon Mar 10 16:07:40 CST 2025
 gradle.version=8.10.2
Index: .gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.gradle.accessors.dm;\r\n\r\nimport org.gradle.api.NonNullApi;\r\nimport org.gradle.api.artifacts.MinimalExternalModuleDependency;\r\nimport org.gradle.plugin.use.PluginDependency;\r\nimport org.gradle.api.artifacts.ExternalModuleDependencyBundle;\r\nimport org.gradle.api.artifacts.MutableVersionConstraint;\r\nimport org.gradle.api.provider.Provider;\r\nimport org.gradle.api.model.ObjectFactory;\r\nimport org.gradle.api.provider.ProviderFactory;\r\nimport org.gradle.api.internal.catalog.AbstractExternalDependencyFactory;\r\nimport org.gradle.api.internal.catalog.DefaultVersionCatalog;\r\nimport java.util.Map;\r\nimport org.gradle.api.internal.attributes.ImmutableAttributesFactory;\r\nimport org.gradle.api.internal.artifacts.dsl.CapabilityNotationParser;\r\nimport javax.inject.Inject;\r\n\r\n/**\r\n * A catalog of dependencies accessible via the {@code libs} extension.\r\n */\r\n@NonNullApi\r\npublic class LibrariesForLibsInPluginsBlock extends AbstractExternalDependencyFactory {\r\n\r\n    private final AbstractExternalDependencyFactory owner = this;\r\n    private final AndroidxLibraryAccessors laccForAndroidxLibraryAccessors = new AndroidxLibraryAccessors(owner);\r\n    private final VersionAccessors vaccForVersionAccessors = new VersionAccessors(providers, config);\r\n    private final BundleAccessors baccForBundleAccessors = new BundleAccessors(objects, providers, config, attributesFactory, capabilityNotationParser);\r\n    private final PluginAccessors paccForPluginAccessors = new PluginAccessors(providers, config);\r\n\r\n    @Inject\r\n    public LibrariesForLibsInPluginsBlock(DefaultVersionCatalog config, ProviderFactory providers, ObjectFactory objects, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) {\r\n        super(config, providers, objects, attributesFactory, capabilityNotationParser);\r\n    }\r\n\r\n    /**\r\n     * Dependency provider for <b>junit</b> with <b>junit:junit</b> coordinates and\r\n     * with version reference <b>junit</b>\r\n     * <p>\r\n     * This dependency was declared in catalog libs.versions.toml\r\n     *\r\n     * @deprecated Will be removed in Gradle 9.0.\r\n     */\r\n    @Deprecated\r\n    public Provider<MinimalExternalModuleDependency> getJunit() {\r\n        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n        return create(\"junit\");\r\n    }\r\n\r\n    /**\r\n     * Group of libraries at <b>androidx</b>\r\n     *\r\n     * @deprecated Will be removed in Gradle 9.0.\r\n     */\r\n    @Deprecated\r\n    public AndroidxLibraryAccessors getAndroidx() {\r\n        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n        return laccForAndroidxLibraryAccessors;\r\n    }\r\n\r\n    /**\r\n     * Group of versions at <b>versions</b>\r\n     */\r\n    public VersionAccessors getVersions() {\r\n        return vaccForVersionAccessors;\r\n    }\r\n\r\n    /**\r\n     * Group of bundles at <b>bundles</b>\r\n     *\r\n     * @deprecated Will be removed in Gradle 9.0.\r\n     */\r\n    @Deprecated\r\n    public BundleAccessors getBundles() {\r\n        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n        return baccForBundleAccessors;\r\n    }\r\n\r\n    /**\r\n     * Group of plugins at <b>plugins</b>\r\n     */\r\n    public PluginAccessors getPlugins() {\r\n        return paccForPluginAccessors;\r\n    }\r\n\r\n    /**\r\n     * @deprecated Will be removed in Gradle 9.0.\r\n     */\r\n    @Deprecated\r\n    public static class AndroidxLibraryAccessors extends SubDependencyFactory {\r\n        private final AndroidxActivityLibraryAccessors laccForAndroidxActivityLibraryAccessors = new AndroidxActivityLibraryAccessors(owner);\r\n        private final AndroidxComposeLibraryAccessors laccForAndroidxComposeLibraryAccessors = new AndroidxComposeLibraryAccessors(owner);\r\n        private final AndroidxCoreLibraryAccessors laccForAndroidxCoreLibraryAccessors = new AndroidxCoreLibraryAccessors(owner);\r\n        private final AndroidxEspressoLibraryAccessors laccForAndroidxEspressoLibraryAccessors = new AndroidxEspressoLibraryAccessors(owner);\r\n        private final AndroidxLifecycleLibraryAccessors laccForAndroidxLifecycleLibraryAccessors = new AndroidxLifecycleLibraryAccessors(owner);\r\n        private final AndroidxUiLibraryAccessors laccForAndroidxUiLibraryAccessors = new AndroidxUiLibraryAccessors(owner);\r\n\r\n        public AndroidxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>junit</b> with <b>androidx.test.ext:junit</b> coordinates and\r\n         * with version reference <b>junitVersion</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public Provider<MinimalExternalModuleDependency> getJunit() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return create(\"androidx.junit\");\r\n        }\r\n\r\n        /**\r\n         * Dependency provider for <b>material3</b> with <b>androidx.compose.material3:material3</b> coordinates and\r\n         * with <b>no version specified</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public Provider<MinimalExternalModuleDependency> getMaterial3() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return create(\"androidx.material3\");\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.activity</b>\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public AndroidxActivityLibraryAccessors getActivity() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return laccForAndroidxActivityLibraryAccessors;\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.compose</b>\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public AndroidxComposeLibraryAccessors getCompose() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return laccForAndroidxComposeLibraryAccessors;\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.core</b>\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public AndroidxCoreLibraryAccessors getCore() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return laccForAndroidxCoreLibraryAccessors;\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.espresso</b>\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public AndroidxEspressoLibraryAccessors getEspresso() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return laccForAndroidxEspressoLibraryAccessors;\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.lifecycle</b>\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public AndroidxLifecycleLibraryAccessors getLifecycle() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return laccForAndroidxLifecycleLibraryAccessors;\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.ui</b>\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public AndroidxUiLibraryAccessors getUi() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return laccForAndroidxUiLibraryAccessors;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @deprecated Will be removed in Gradle 9.0.\r\n     */\r\n    @Deprecated\r\n    public static class AndroidxActivityLibraryAccessors extends SubDependencyFactory {\r\n\r\n        public AndroidxActivityLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>compose</b> with <b>androidx.activity:activity-compose</b> coordinates and\r\n         * with version reference <b>activityCompose</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public Provider<MinimalExternalModuleDependency> getCompose() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return create(\"androidx.activity.compose\");\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @deprecated Will be removed in Gradle 9.0.\r\n     */\r\n    @Deprecated\r\n    public static class AndroidxComposeLibraryAccessors extends SubDependencyFactory {\r\n\r\n        public AndroidxComposeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>bom</b> with <b>androidx.compose:compose-bom</b> coordinates and\r\n         * with version reference <b>composeBom</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public Provider<MinimalExternalModuleDependency> getBom() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return create(\"androidx.compose.bom\");\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @deprecated Will be removed in Gradle 9.0.\r\n     */\r\n    @Deprecated\r\n    public static class AndroidxCoreLibraryAccessors extends SubDependencyFactory {\r\n\r\n        public AndroidxCoreLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>ktx</b> with <b>androidx.core:core-ktx</b> coordinates and\r\n         * with version reference <b>coreKtx</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public Provider<MinimalExternalModuleDependency> getKtx() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return create(\"androidx.core.ktx\");\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @deprecated Will be removed in Gradle 9.0.\r\n     */\r\n    @Deprecated\r\n    public static class AndroidxEspressoLibraryAccessors extends SubDependencyFactory {\r\n\r\n        public AndroidxEspressoLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>core</b> with <b>androidx.test.espresso:espresso-core</b> coordinates and\r\n         * with version reference <b>espressoCore</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public Provider<MinimalExternalModuleDependency> getCore() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return create(\"androidx.espresso.core\");\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @deprecated Will be removed in Gradle 9.0.\r\n     */\r\n    @Deprecated\r\n    public static class AndroidxLifecycleLibraryAccessors extends SubDependencyFactory {\r\n        private final AndroidxLifecycleRuntimeLibraryAccessors laccForAndroidxLifecycleRuntimeLibraryAccessors = new AndroidxLifecycleRuntimeLibraryAccessors(owner);\r\n\r\n        public AndroidxLifecycleLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.lifecycle.runtime</b>\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public AndroidxLifecycleRuntimeLibraryAccessors getRuntime() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return laccForAndroidxLifecycleRuntimeLibraryAccessors;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @deprecated Will be removed in Gradle 9.0.\r\n     */\r\n    @Deprecated\r\n    public static class AndroidxLifecycleRuntimeLibraryAccessors extends SubDependencyFactory {\r\n\r\n        public AndroidxLifecycleRuntimeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>ktx</b> with <b>androidx.lifecycle:lifecycle-runtime-ktx</b> coordinates and\r\n         * with version reference <b>lifecycleRuntimeKtx</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public Provider<MinimalExternalModuleDependency> getKtx() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return create(\"androidx.lifecycle.runtime.ktx\");\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @deprecated Will be removed in Gradle 9.0.\r\n     */\r\n    @Deprecated\r\n    public static class AndroidxUiLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {\r\n        private final AndroidxUiTestLibraryAccessors laccForAndroidxUiTestLibraryAccessors = new AndroidxUiTestLibraryAccessors(owner);\r\n        private final AndroidxUiToolingLibraryAccessors laccForAndroidxUiToolingLibraryAccessors = new AndroidxUiToolingLibraryAccessors(owner);\r\n\r\n        public AndroidxUiLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>ui</b> with <b>androidx.compose.ui:ui</b> coordinates and\r\n         * with <b>no version specified</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public Provider<MinimalExternalModuleDependency> asProvider() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return create(\"androidx.ui\");\r\n        }\r\n\r\n        /**\r\n         * Dependency provider for <b>graphics</b> with <b>androidx.compose.ui:ui-graphics</b> coordinates and\r\n         * with <b>no version specified</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public Provider<MinimalExternalModuleDependency> getGraphics() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return create(\"androidx.ui.graphics\");\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.ui.test</b>\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public AndroidxUiTestLibraryAccessors getTest() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return laccForAndroidxUiTestLibraryAccessors;\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.ui.tooling</b>\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public AndroidxUiToolingLibraryAccessors getTooling() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return laccForAndroidxUiToolingLibraryAccessors;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @deprecated Will be removed in Gradle 9.0.\r\n     */\r\n    @Deprecated\r\n    public static class AndroidxUiTestLibraryAccessors extends SubDependencyFactory {\r\n\r\n        public AndroidxUiTestLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>junit4</b> with <b>androidx.compose.ui:ui-test-junit4</b> coordinates and\r\n         * with <b>no version specified</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public Provider<MinimalExternalModuleDependency> getJunit4() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return create(\"androidx.ui.test.junit4\");\r\n        }\r\n\r\n        /**\r\n         * Dependency provider for <b>manifest</b> with <b>androidx.compose.ui:ui-test-manifest</b> coordinates and\r\n         * with <b>no version specified</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public Provider<MinimalExternalModuleDependency> getManifest() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return create(\"androidx.ui.test.manifest\");\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @deprecated Will be removed in Gradle 9.0.\r\n     */\r\n    @Deprecated\r\n    public static class AndroidxUiToolingLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {\r\n\r\n        public AndroidxUiToolingLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>tooling</b> with <b>androidx.compose.ui:ui-tooling</b> coordinates and\r\n         * with <b>no version specified</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public Provider<MinimalExternalModuleDependency> asProvider() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return create(\"androidx.ui.tooling\");\r\n        }\r\n\r\n        /**\r\n         * Dependency provider for <b>preview</b> with <b>androidx.compose.ui:ui-tooling-preview</b> coordinates and\r\n         * with <b>no version specified</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         *\r\n         * @deprecated Will be removed in Gradle 9.0.\r\n         */\r\n        @Deprecated\r\n        public Provider<MinimalExternalModuleDependency> getPreview() {\r\n            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour(\"Accessing libraries or bundles from version catalogs in the plugins block.\").withAdvice(\"Only use versions or plugins from catalogs in the plugins block.\").willBeRemovedInGradle9().withUpgradeGuideSection(8, \"kotlin_dsl_deprecated_catalogs_plugins_block\").nagUser();\r\n            return create(\"androidx.ui.tooling.preview\");\r\n        }\r\n\r\n    }\r\n\r\n    public static class VersionAccessors extends VersionFactory  {\r\n\r\n        public VersionAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }\r\n\r\n        /**\r\n         * Version alias <b>activityCompose</b> with value <b>1.10.0</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getActivityCompose() { return getVersion(\"activityCompose\"); }\r\n\r\n        /**\r\n         * Version alias <b>agp</b> with value <b>8.8.0</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getAgp() { return getVersion(\"agp\"); }\r\n\r\n        /**\r\n         * Version alias <b>composeBom</b> with value <b>2024.04.01</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getComposeBom() { return getVersion(\"composeBom\"); }\r\n\r\n        /**\r\n         * Version alias <b>coreKtx</b> with value <b>1.15.0</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getCoreKtx() { return getVersion(\"coreKtx\"); }\r\n\r\n        /**\r\n         * Version alias <b>espressoCore</b> with value <b>3.6.1</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getEspressoCore() { return getVersion(\"espressoCore\"); }\r\n\r\n        /**\r\n         * Version alias <b>junit</b> with value <b>4.13.2</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getJunit() { return getVersion(\"junit\"); }\r\n\r\n        /**\r\n         * Version alias <b>junitVersion</b> with value <b>1.2.1</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getJunitVersion() { return getVersion(\"junitVersion\"); }\r\n\r\n        /**\r\n         * Version alias <b>kotlin</b> with value <b>2.0.0</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getKotlin() { return getVersion(\"kotlin\"); }\r\n\r\n        /**\r\n         * Version alias <b>lifecycleRuntimeKtx</b> with value <b>2.8.7</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getLifecycleRuntimeKtx() { return getVersion(\"lifecycleRuntimeKtx\"); }\r\n\r\n    }\r\n\r\n    /**\r\n     * @deprecated Will be removed in Gradle 9.0.\r\n     */\r\n    @Deprecated\r\n    public static class BundleAccessors extends BundleFactory {\r\n\r\n        public BundleAccessors(ObjectFactory objects, ProviderFactory providers, DefaultVersionCatalog config, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) { super(objects, providers, config, attributesFactory, capabilityNotationParser); }\r\n\r\n    }\r\n\r\n    public static class PluginAccessors extends PluginFactory {\r\n        private final AndroidPluginAccessors paccForAndroidPluginAccessors = new AndroidPluginAccessors(providers, config);\r\n        private final KotlinPluginAccessors paccForKotlinPluginAccessors = new KotlinPluginAccessors(providers, config);\r\n\r\n        public PluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }\r\n\r\n        /**\r\n         * Group of plugins at <b>plugins.android</b>\r\n         */\r\n        public AndroidPluginAccessors getAndroid() {\r\n            return paccForAndroidPluginAccessors;\r\n        }\r\n\r\n        /**\r\n         * Group of plugins at <b>plugins.kotlin</b>\r\n         */\r\n        public KotlinPluginAccessors getKotlin() {\r\n            return paccForKotlinPluginAccessors;\r\n        }\r\n\r\n    }\r\n\r\n    public static class AndroidPluginAccessors extends PluginFactory {\r\n\r\n        public AndroidPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }\r\n\r\n        /**\r\n         * Plugin provider for <b>android.application</b> with plugin id <b>com.android.application</b> and\r\n         * with version reference <b>agp</b>\r\n         * <p>\r\n         * This plugin was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<PluginDependency> getApplication() { return createPlugin(\"android.application\"); }\r\n\r\n    }\r\n\r\n    public static class KotlinPluginAccessors extends PluginFactory {\r\n\r\n        public KotlinPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }\r\n\r\n        /**\r\n         * Plugin provider for <b>kotlin.android</b> with plugin id <b>org.jetbrains.kotlin.android</b> and\r\n         * with version reference <b>kotlin</b>\r\n         * <p>\r\n         * This plugin was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<PluginDependency> getAndroid() { return createPlugin(\"kotlin.android\"); }\r\n\r\n        /**\r\n         * Plugin provider for <b>kotlin.compose</b> with plugin id <b>org.jetbrains.kotlin.plugin.compose</b> and\r\n         * with version reference <b>kotlin</b>\r\n         * <p>\r\n         * This plugin was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<PluginDependency> getCompose() { return createPlugin(\"kotlin.compose\"); }\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java b/.gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java
--- a/.gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java	(revision 560956e81e865cb129d62555fcdb9bd8f556e001)
+++ b/.gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java	(date 1741644474550)
@@ -487,7 +487,7 @@
         public Provider<String> getActivityCompose() { return getVersion("activityCompose"); }
 
         /**
-         * Version alias <b>agp</b> with value <b>8.8.0</b>
+         * Version alias <b>agp</b> with value <b>8.8.2</b>
          * <p>
          * If the version is a rich version and cannot be represented as a
          * single version string, an empty string is returned.
Index: build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\n    alias(libs.plugins.android.application) apply false\r\n    alias(libs.plugins.kotlin.android) apply false\r\n    alias(libs.plugins.kotlin.compose) apply false\r\n    id(\"com.google.gms.google-services\") version \"4.4.2\" apply false\r\n//    id(\"androidx.navigation.safeargs\") version \"2.7.7\" apply false\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle.kts b/build.gradle.kts
--- a/build.gradle.kts	(revision 560956e81e865cb129d62555fcdb9bd8f556e001)
+++ b/build.gradle.kts	(date 1741645069347)
@@ -5,7 +5,6 @@
     alias(libs.plugins.kotlin.android) apply false
     alias(libs.plugins.kotlin.compose) apply false
     id("com.google.gms.google-services") version "4.4.2" apply false
-//    id("androidx.navigation.safeargs") version "2.7.7" apply false
 
 }
 
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.kotlin.android)\r\n    alias(libs.plugins.kotlin.compose)\r\n\r\n    //FIREBASE\r\n    id(\"com.google.gms.google-services\") // Agregar esta línea\r\n\r\n//    id(\"androidx.navigation.safeargs\") // Add this line\r\n\r\n\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.maverick.adminapp\"\r\n    compileSdk = 35\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.maverick.adminapp\"\r\n        minSdk = 26\r\n        targetSdk = 35\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_11\r\n        targetCompatibility = JavaVersion.VERSION_11\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"11\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n\r\n    //material\r\n    implementation(\"com.google.android.material:material:1.12.0\")\r\n\r\n    // para la navegacion en fragments\r\n    implementation (\"androidx.navigation:navigation-fragment-ktx:2.5.3\")\r\n    implementation (\"androidx.navigation:navigation-ui-ktx:2.5.3\")\r\n\r\n    //FIREBASE\r\n    implementation(platform(\"com.google.firebase:firebase-bom:33.9.0\"))\r\n    implementation(\"com.google.firebase:firebase-firestore-ktx\")\r\n    implementation(\"com.google.firebase:firebase-messaging\")\r\n    implementation(\"com.google.firebase:firebase-auth\")\r\n\r\n\r\n\r\n    //RecyclerView\r\n//    implementation(\"androidx.recyclerview:recyclerview:1.3.2\")\r\n\r\n//    implementation(\"androidx.navigation:navigation-safe-args-gradle-plugin:2.8.8\")\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 560956e81e865cb129d62555fcdb9bd8f556e001)
+++ b/app/build.gradle.kts	(date 1741645201900)
@@ -6,8 +6,7 @@
     //FIREBASE
     id("com.google.gms.google-services") // Agregar esta línea
 
-//    id("androidx.navigation.safeargs") // Add this line
-
+    // Safe Args (para pasar datos entre fragments
 
 }
 
@@ -68,19 +67,16 @@
     implementation("com.google.android.material:material:1.12.0")
 
     // para la navegacion en fragments
-    implementation ("androidx.navigation:navigation-fragment-ktx:2.5.3")
-    implementation ("androidx.navigation:navigation-ui-ktx:2.5.3")
+    implementation("androidx.navigation:navigation-fragment-ktx:2.5.3")
+    implementation("androidx.navigation:navigation-ui-ktx:2.5.3")
 
     //FIREBASE
     implementation(platform("com.google.firebase:firebase-bom:33.9.0"))
     implementation("com.google.firebase:firebase-firestore-ktx")
     implementation("com.google.firebase:firebase-messaging")
     implementation("com.google.firebase:firebase-auth")
-
-
-
+    
     //RecyclerView
-//    implementation("androidx.recyclerview:recyclerview:1.3.2")
+    implementation("androidx.recyclerview:recyclerview:1.3.2")
 
-//    implementation("androidx.navigation:navigation-safe-args-gradle-plugin:2.8.8")
 }
\ No newline at end of file
Index: .gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibs.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.gradle.accessors.dm;\r\n\r\nimport org.gradle.api.NonNullApi;\r\nimport org.gradle.api.artifacts.MinimalExternalModuleDependency;\r\nimport org.gradle.plugin.use.PluginDependency;\r\nimport org.gradle.api.artifacts.ExternalModuleDependencyBundle;\r\nimport org.gradle.api.artifacts.MutableVersionConstraint;\r\nimport org.gradle.api.provider.Provider;\r\nimport org.gradle.api.model.ObjectFactory;\r\nimport org.gradle.api.provider.ProviderFactory;\r\nimport org.gradle.api.internal.catalog.AbstractExternalDependencyFactory;\r\nimport org.gradle.api.internal.catalog.DefaultVersionCatalog;\r\nimport java.util.Map;\r\nimport org.gradle.api.internal.attributes.ImmutableAttributesFactory;\r\nimport org.gradle.api.internal.artifacts.dsl.CapabilityNotationParser;\r\nimport javax.inject.Inject;\r\n\r\n/**\r\n * A catalog of dependencies accessible via the {@code libs} extension.\r\n */\r\n@NonNullApi\r\npublic class LibrariesForLibs extends AbstractExternalDependencyFactory {\r\n\r\n    private final AbstractExternalDependencyFactory owner = this;\r\n    private final AndroidxLibraryAccessors laccForAndroidxLibraryAccessors = new AndroidxLibraryAccessors(owner);\r\n    private final VersionAccessors vaccForVersionAccessors = new VersionAccessors(providers, config);\r\n    private final BundleAccessors baccForBundleAccessors = new BundleAccessors(objects, providers, config, attributesFactory, capabilityNotationParser);\r\n    private final PluginAccessors paccForPluginAccessors = new PluginAccessors(providers, config);\r\n\r\n    @Inject\r\n    public LibrariesForLibs(DefaultVersionCatalog config, ProviderFactory providers, ObjectFactory objects, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) {\r\n        super(config, providers, objects, attributesFactory, capabilityNotationParser);\r\n    }\r\n\r\n    /**\r\n     * Dependency provider for <b>junit</b> with <b>junit:junit</b> coordinates and\r\n     * with version reference <b>junit</b>\r\n     * <p>\r\n     * This dependency was declared in catalog libs.versions.toml\r\n     */\r\n    public Provider<MinimalExternalModuleDependency> getJunit() {\r\n        return create(\"junit\");\r\n    }\r\n\r\n    /**\r\n     * Group of libraries at <b>androidx</b>\r\n     */\r\n    public AndroidxLibraryAccessors getAndroidx() {\r\n        return laccForAndroidxLibraryAccessors;\r\n    }\r\n\r\n    /**\r\n     * Group of versions at <b>versions</b>\r\n     */\r\n    public VersionAccessors getVersions() {\r\n        return vaccForVersionAccessors;\r\n    }\r\n\r\n    /**\r\n     * Group of bundles at <b>bundles</b>\r\n     */\r\n    public BundleAccessors getBundles() {\r\n        return baccForBundleAccessors;\r\n    }\r\n\r\n    /**\r\n     * Group of plugins at <b>plugins</b>\r\n     */\r\n    public PluginAccessors getPlugins() {\r\n        return paccForPluginAccessors;\r\n    }\r\n\r\n    public static class AndroidxLibraryAccessors extends SubDependencyFactory {\r\n        private final AndroidxActivityLibraryAccessors laccForAndroidxActivityLibraryAccessors = new AndroidxActivityLibraryAccessors(owner);\r\n        private final AndroidxComposeLibraryAccessors laccForAndroidxComposeLibraryAccessors = new AndroidxComposeLibraryAccessors(owner);\r\n        private final AndroidxCoreLibraryAccessors laccForAndroidxCoreLibraryAccessors = new AndroidxCoreLibraryAccessors(owner);\r\n        private final AndroidxEspressoLibraryAccessors laccForAndroidxEspressoLibraryAccessors = new AndroidxEspressoLibraryAccessors(owner);\r\n        private final AndroidxLifecycleLibraryAccessors laccForAndroidxLifecycleLibraryAccessors = new AndroidxLifecycleLibraryAccessors(owner);\r\n        private final AndroidxUiLibraryAccessors laccForAndroidxUiLibraryAccessors = new AndroidxUiLibraryAccessors(owner);\r\n\r\n        public AndroidxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>junit</b> with <b>androidx.test.ext:junit</b> coordinates and\r\n         * with version reference <b>junitVersion</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<MinimalExternalModuleDependency> getJunit() {\r\n            return create(\"androidx.junit\");\r\n        }\r\n\r\n        /**\r\n         * Dependency provider for <b>material3</b> with <b>androidx.compose.material3:material3</b> coordinates and\r\n         * with <b>no version specified</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<MinimalExternalModuleDependency> getMaterial3() {\r\n            return create(\"androidx.material3\");\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.activity</b>\r\n         */\r\n        public AndroidxActivityLibraryAccessors getActivity() {\r\n            return laccForAndroidxActivityLibraryAccessors;\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.compose</b>\r\n         */\r\n        public AndroidxComposeLibraryAccessors getCompose() {\r\n            return laccForAndroidxComposeLibraryAccessors;\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.core</b>\r\n         */\r\n        public AndroidxCoreLibraryAccessors getCore() {\r\n            return laccForAndroidxCoreLibraryAccessors;\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.espresso</b>\r\n         */\r\n        public AndroidxEspressoLibraryAccessors getEspresso() {\r\n            return laccForAndroidxEspressoLibraryAccessors;\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.lifecycle</b>\r\n         */\r\n        public AndroidxLifecycleLibraryAccessors getLifecycle() {\r\n            return laccForAndroidxLifecycleLibraryAccessors;\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.ui</b>\r\n         */\r\n        public AndroidxUiLibraryAccessors getUi() {\r\n            return laccForAndroidxUiLibraryAccessors;\r\n        }\r\n\r\n    }\r\n\r\n    public static class AndroidxActivityLibraryAccessors extends SubDependencyFactory {\r\n\r\n        public AndroidxActivityLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>compose</b> with <b>androidx.activity:activity-compose</b> coordinates and\r\n         * with version reference <b>activityCompose</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<MinimalExternalModuleDependency> getCompose() {\r\n            return create(\"androidx.activity.compose\");\r\n        }\r\n\r\n    }\r\n\r\n    public static class AndroidxComposeLibraryAccessors extends SubDependencyFactory {\r\n\r\n        public AndroidxComposeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>bom</b> with <b>androidx.compose:compose-bom</b> coordinates and\r\n         * with version reference <b>composeBom</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<MinimalExternalModuleDependency> getBom() {\r\n            return create(\"androidx.compose.bom\");\r\n        }\r\n\r\n    }\r\n\r\n    public static class AndroidxCoreLibraryAccessors extends SubDependencyFactory {\r\n\r\n        public AndroidxCoreLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>ktx</b> with <b>androidx.core:core-ktx</b> coordinates and\r\n         * with version reference <b>coreKtx</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<MinimalExternalModuleDependency> getKtx() {\r\n            return create(\"androidx.core.ktx\");\r\n        }\r\n\r\n    }\r\n\r\n    public static class AndroidxEspressoLibraryAccessors extends SubDependencyFactory {\r\n\r\n        public AndroidxEspressoLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>core</b> with <b>androidx.test.espresso:espresso-core</b> coordinates and\r\n         * with version reference <b>espressoCore</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<MinimalExternalModuleDependency> getCore() {\r\n            return create(\"androidx.espresso.core\");\r\n        }\r\n\r\n    }\r\n\r\n    public static class AndroidxLifecycleLibraryAccessors extends SubDependencyFactory {\r\n        private final AndroidxLifecycleRuntimeLibraryAccessors laccForAndroidxLifecycleRuntimeLibraryAccessors = new AndroidxLifecycleRuntimeLibraryAccessors(owner);\r\n\r\n        public AndroidxLifecycleLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.lifecycle.runtime</b>\r\n         */\r\n        public AndroidxLifecycleRuntimeLibraryAccessors getRuntime() {\r\n            return laccForAndroidxLifecycleRuntimeLibraryAccessors;\r\n        }\r\n\r\n    }\r\n\r\n    public static class AndroidxLifecycleRuntimeLibraryAccessors extends SubDependencyFactory {\r\n\r\n        public AndroidxLifecycleRuntimeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>ktx</b> with <b>androidx.lifecycle:lifecycle-runtime-ktx</b> coordinates and\r\n         * with version reference <b>lifecycleRuntimeKtx</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<MinimalExternalModuleDependency> getKtx() {\r\n            return create(\"androidx.lifecycle.runtime.ktx\");\r\n        }\r\n\r\n    }\r\n\r\n    public static class AndroidxUiLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {\r\n        private final AndroidxUiTestLibraryAccessors laccForAndroidxUiTestLibraryAccessors = new AndroidxUiTestLibraryAccessors(owner);\r\n        private final AndroidxUiToolingLibraryAccessors laccForAndroidxUiToolingLibraryAccessors = new AndroidxUiToolingLibraryAccessors(owner);\r\n\r\n        public AndroidxUiLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>ui</b> with <b>androidx.compose.ui:ui</b> coordinates and\r\n         * with <b>no version specified</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<MinimalExternalModuleDependency> asProvider() {\r\n            return create(\"androidx.ui\");\r\n        }\r\n\r\n        /**\r\n         * Dependency provider for <b>graphics</b> with <b>androidx.compose.ui:ui-graphics</b> coordinates and\r\n         * with <b>no version specified</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<MinimalExternalModuleDependency> getGraphics() {\r\n            return create(\"androidx.ui.graphics\");\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.ui.test</b>\r\n         */\r\n        public AndroidxUiTestLibraryAccessors getTest() {\r\n            return laccForAndroidxUiTestLibraryAccessors;\r\n        }\r\n\r\n        /**\r\n         * Group of libraries at <b>androidx.ui.tooling</b>\r\n         */\r\n        public AndroidxUiToolingLibraryAccessors getTooling() {\r\n            return laccForAndroidxUiToolingLibraryAccessors;\r\n        }\r\n\r\n    }\r\n\r\n    public static class AndroidxUiTestLibraryAccessors extends SubDependencyFactory {\r\n\r\n        public AndroidxUiTestLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>junit4</b> with <b>androidx.compose.ui:ui-test-junit4</b> coordinates and\r\n         * with <b>no version specified</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<MinimalExternalModuleDependency> getJunit4() {\r\n            return create(\"androidx.ui.test.junit4\");\r\n        }\r\n\r\n        /**\r\n         * Dependency provider for <b>manifest</b> with <b>androidx.compose.ui:ui-test-manifest</b> coordinates and\r\n         * with <b>no version specified</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<MinimalExternalModuleDependency> getManifest() {\r\n            return create(\"androidx.ui.test.manifest\");\r\n        }\r\n\r\n    }\r\n\r\n    public static class AndroidxUiToolingLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {\r\n\r\n        public AndroidxUiToolingLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }\r\n\r\n        /**\r\n         * Dependency provider for <b>tooling</b> with <b>androidx.compose.ui:ui-tooling</b> coordinates and\r\n         * with <b>no version specified</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<MinimalExternalModuleDependency> asProvider() {\r\n            return create(\"androidx.ui.tooling\");\r\n        }\r\n\r\n        /**\r\n         * Dependency provider for <b>preview</b> with <b>androidx.compose.ui:ui-tooling-preview</b> coordinates and\r\n         * with <b>no version specified</b>\r\n         * <p>\r\n         * This dependency was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<MinimalExternalModuleDependency> getPreview() {\r\n            return create(\"androidx.ui.tooling.preview\");\r\n        }\r\n\r\n    }\r\n\r\n    public static class VersionAccessors extends VersionFactory  {\r\n\r\n        public VersionAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }\r\n\r\n        /**\r\n         * Version alias <b>activityCompose</b> with value <b>1.10.0</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getActivityCompose() { return getVersion(\"activityCompose\"); }\r\n\r\n        /**\r\n         * Version alias <b>agp</b> with value <b>8.8.0</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getAgp() { return getVersion(\"agp\"); }\r\n\r\n        /**\r\n         * Version alias <b>composeBom</b> with value <b>2024.04.01</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getComposeBom() { return getVersion(\"composeBom\"); }\r\n\r\n        /**\r\n         * Version alias <b>coreKtx</b> with value <b>1.15.0</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getCoreKtx() { return getVersion(\"coreKtx\"); }\r\n\r\n        /**\r\n         * Version alias <b>espressoCore</b> with value <b>3.6.1</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getEspressoCore() { return getVersion(\"espressoCore\"); }\r\n\r\n        /**\r\n         * Version alias <b>junit</b> with value <b>4.13.2</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getJunit() { return getVersion(\"junit\"); }\r\n\r\n        /**\r\n         * Version alias <b>junitVersion</b> with value <b>1.2.1</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getJunitVersion() { return getVersion(\"junitVersion\"); }\r\n\r\n        /**\r\n         * Version alias <b>kotlin</b> with value <b>2.0.0</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getKotlin() { return getVersion(\"kotlin\"); }\r\n\r\n        /**\r\n         * Version alias <b>lifecycleRuntimeKtx</b> with value <b>2.8.7</b>\r\n         * <p>\r\n         * If the version is a rich version and cannot be represented as a\r\n         * single version string, an empty string is returned.\r\n         * <p>\r\n         * This version was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<String> getLifecycleRuntimeKtx() { return getVersion(\"lifecycleRuntimeKtx\"); }\r\n\r\n    }\r\n\r\n    public static class BundleAccessors extends BundleFactory {\r\n\r\n        public BundleAccessors(ObjectFactory objects, ProviderFactory providers, DefaultVersionCatalog config, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) { super(objects, providers, config, attributesFactory, capabilityNotationParser); }\r\n\r\n    }\r\n\r\n    public static class PluginAccessors extends PluginFactory {\r\n        private final AndroidPluginAccessors paccForAndroidPluginAccessors = new AndroidPluginAccessors(providers, config);\r\n        private final KotlinPluginAccessors paccForKotlinPluginAccessors = new KotlinPluginAccessors(providers, config);\r\n\r\n        public PluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }\r\n\r\n        /**\r\n         * Group of plugins at <b>plugins.android</b>\r\n         */\r\n        public AndroidPluginAccessors getAndroid() {\r\n            return paccForAndroidPluginAccessors;\r\n        }\r\n\r\n        /**\r\n         * Group of plugins at <b>plugins.kotlin</b>\r\n         */\r\n        public KotlinPluginAccessors getKotlin() {\r\n            return paccForKotlinPluginAccessors;\r\n        }\r\n\r\n    }\r\n\r\n    public static class AndroidPluginAccessors extends PluginFactory {\r\n\r\n        public AndroidPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }\r\n\r\n        /**\r\n         * Plugin provider for <b>android.application</b> with plugin id <b>com.android.application</b> and\r\n         * with version reference <b>agp</b>\r\n         * <p>\r\n         * This plugin was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<PluginDependency> getApplication() { return createPlugin(\"android.application\"); }\r\n\r\n    }\r\n\r\n    public static class KotlinPluginAccessors extends PluginFactory {\r\n\r\n        public KotlinPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }\r\n\r\n        /**\r\n         * Plugin provider for <b>kotlin.android</b> with plugin id <b>org.jetbrains.kotlin.android</b> and\r\n         * with version reference <b>kotlin</b>\r\n         * <p>\r\n         * This plugin was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<PluginDependency> getAndroid() { return createPlugin(\"kotlin.android\"); }\r\n\r\n        /**\r\n         * Plugin provider for <b>kotlin.compose</b> with plugin id <b>org.jetbrains.kotlin.plugin.compose</b> and\r\n         * with version reference <b>kotlin</b>\r\n         * <p>\r\n         * This plugin was declared in catalog libs.versions.toml\r\n         */\r\n        public Provider<PluginDependency> getCompose() { return createPlugin(\"kotlin.compose\"); }\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibs.java b/.gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibs.java
--- a/.gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibs.java	(revision 560956e81e865cb129d62555fcdb9bd8f556e001)
+++ b/.gradle/8.10.2/dependencies-accessors/653825400482ee63928b2750563e94a5ec2d47e4/sources/org/gradle/accessors/dm/LibrariesForLibs.java	(date 1741644474527)
@@ -347,7 +347,7 @@
         public Provider<String> getActivityCompose() { return getVersion("activityCompose"); }
 
         /**
-         * Version alias <b>agp</b> with value <b>8.8.0</b>
+         * Version alias <b>agp</b> with value <b>8.8.2</b>
          * <p>
          * If the version is a rich version and cannot be represented as a
          * single version string, an empty string is returned.
